Css -> estilização do site, não é uma linguagen de programação

Funciona por meio de seletores
Ex:
    h1{
        font-family: Arial;
        font-size: 20pt;
        color: blue;
    }

    h1 - seletor
    "font-family: Arial", "font-size: 20pt", "color: blue" - Declaração
    font-family, font-size, color - propriedade
    Arial, 20pt, blue - Valor

font-family - declara qual a fonte da letra como por exemplo "Arial";

font-size - Declara em que tamanho será a fonte como por exemplo: "20pt" ou "20px";
    pt = pontos
    px = pixels

color - Define a cor da letra como por exemplo: "blue", "#358754";

text-align - Alinha o texto por exemplo: justify;

background-color - muda a cor do fundo do site por exemplo: lightskyblue;

text-decoration - decora o texto do seletor por exemplo: underline;

* - configurações globais para todos os elementos no html;

height - é a altura que vai  ficar o elemento;

background-image -  adiciona imagem de background.
    linear-gradient(direção, começa, termina) - gradiente de cores; Exemplo:
        direção:
            fixas:
                to top - de baixo para cima;
                to left - da direita para esquerda;
                to right - da esquerda para direita;
                to bottom - de cima para baixo;
            graus:
                90deg - 90 graus;
                45deg - 45 graus;
                180deg - 180 graus; 
            
            tem como colocar as porcentagens também:
                linear-gradient(to top,  red, yellow 50%, green) - nesse caso o amarelo está ocupando metade da tela no caso 50%;



    radio-gradient(direção, começa, meio, termina); 
        direções:
            circle – sentido circular;
            ellipse – sentido elíptico;
        

background-attachment - define como a imagem deve estar relacionada com o restante do documento.
    fixed - Fixa a imagem na tela e não segue o scroll;
    scroll - A imagem segue o scroll do site;
    local - A imagem fica onde está definida;



Estilos:
    Pode se usar todos os tipos de estilos em um html sendo o "inline",  "locais" e "external" sendo nessa ordem de prevalencia.

    CSS inline:
        É o menos recomendado mas é uma base boa.
        é básicamante colocar a css dentro do html, exemplo:
            <h1 style="color: mediumblue;">Exemplo/h1>
        É difícil de usar pois para cada alteração tipo nas tags "h1" você tera que mexer manualmete em todos os "h1" do html e por isso não é recomendado.



    CSS locais ou internos:
        É usado dentro do htlm também mas é usado de uma forma muito mais prática e organizada.
        Que é colcoar a tag "style" dentro da tag head de um html.

        Exemplo:
            <head>
                ...
                <style>
                    ...
                <style>
            <head>
            ...
        
        Não é recomedada pois se tiver vários htmls você teria que digitar todos os estilos novamente.
    


    CSS externos:
        É o estilo mais versatil e organizado, serve para separar as tags de estilos dos conteúdos.
        Para usar esse método você precisa criar um arquivo .css e linká-lo no seu html com a tag link.

        Exemplo:
            <head>
                ...
                <link rel="stylesheet" href="style.css">
            <head>
        
        

Regras:
    
    @charset: UTF-8; -> Define qual será o charset padrão do documento.
        UTF-8 = pode adicionar acentos e caracters especiais sem problemas.
    


Cores:
    são muito importantes para a apresentação de um site. Para manter o usuário nele é bom colocar uma cor que combine com o que está desejando.
    Para pegar cores que sejas armonicas pode usar o AdobeColor, Paletton.com  

    Colocando cores no CSS:
        Por nome:
            É colcoar no nome da cor como por exemplo: red, blue, green...
            tem que ser em inglês.
            Exemplo:
                background-color: blue; 
                color: white;
        
        Por Hexadecimal:
            Como funciona o Hexadecimal:
                (R)(R)(G)(G)(B)(B), RRGGBB ou RGB - Ele é composto por 6 dígitos hexadecimais. De 0 até f.
                    R = red
                    G = green
                    B = blue
                As primeiras duas casas representam a quantidade de vermelho na cor.
                As próximas duas casas são verde e as últimas duas são azul.
                para respresentar a quantidade de vermelho, verde ou azul vai de 00 até ff.
                    0 = 0
                    f = 250
                o maximo é o f e o mínimo é o 0.
            
            É colocar o código rgb no css assim:
                background-color: #0000ff; = blue
                color: #ffffff; = white
            isso são as mesmas cores do exemplo anterior mas com o rgb.
        
        Uando o comando rgb:
            é da mesma forma que o Hexadecimal mas sem usar os hexadecimais, por exemplo:
                background-color: rgb(0, 0, 250); = blue
                color: rgb(250, 250, 250); = white
            essas cores representam  um valor entre 0 e 100% de cada cor.
            mas sem usar o a, b, c, d e f dos hexadecimais somente usando decimais para dar as cores.
        
        Representação por HSL(Hue, Saruration, Luminosity):
            O HSL é uma escala de cores onde a cor é definida pelos seguintes valores:
                H = Hue - grau da cor
                S = Satúration - saturação da cor
                L = Luminance - luminescência da cor
            
            Para se usar o HSL no CSS você precisa usar o comando hsl() e passar os três parâmetros separados por virgulas.
            Aqui está como se expressa:
                background-color: hsl(0, 100%, 50%); = blue
                color: hsl(0, 0%, 100%); = white
            Nesse caso o Hue é 0 graus, o Saturation é 100% e o Lightness é 50%.
            Isso significa que a cor será completamente azul.
            


Degardê:
    para colocar um degardê no site utilizamos o comando "background-image: linear-gradient(direção, começa, meio, termina)":
        Exemplo:
            background-image: linear-gradient(to top, white, blue);
    tem como colcar diferntes formas como circulo, etc usando o "radio-gradient(direção, começa, meio, termina)"
        radio-gradient: (circle, white, blue);
    

Fontes:
    As fontes são importantes para passar a mensagem que deseja antes da pessoa ler ela e também dixar mais bonita.
        Serif - Fonte com serifa.
        Sans-serif - Fonte sem serifa.
        Monospace - Letras muito uniformes.
        Courier New - Fonte mais antiga.
    Para colcar uma fonte em um elemento use a propriedade "font-family" e coloca a fonte desejada. 



    Tamanhos:
        Medidas absolutas:
            Elas são o cm, mm, in(polegada), px, pt, pc(paica).
                cm, mm e in - Não são recomedadas a usar pois pode se ter telas de tamanho diferentes, então a apresentação vai estar diferente do desejado.
                px - Pode não ser a melhor escolha pois existem telas que 1px é 1/4px no caso as de retina.
                pt e pc - Não são recomedadas para se usar em matriais que serão exibidos em telas pois são medidas da tipografia de papel. 
        Medidas relativas:
            Elas em, ex, rem, vw, vh e % existem outros tipo de medidas mas o recomendado é o "em":
                em = medida relativa ao temanho atual da fonte;
                ex = relativa a autura x de uma fonte;
                rem = tipo o "em" só que é a fonte retaiva ao root no caso a fonte configurada no body;
                vw =  viewport width ou largura do visor do dispositivo;
                vh = Viewport Height ou altura do visor do dispositivo;
        
        O tamnho da fonte geralmete no navegadores são de "16px" e "1em" equivale a exatamnete a "16px", então considerando isso "2em = 32px".
        para colocar o tamnho de uma fonte é recomendado usar o "em" pois ele veio pensado pra isso usar o tamanho da fonte para mudar o dele.



    Peso:
        É basicamente a quantidade de espessura que a letra terá na fonte se usa o comando "font-weight: ;". 

        Peso com palavaras chave:
            Lighter - Menos negrito que o texto normal;
            Normal - Texto normal;  
            Bold - Texto em negrito;
            Bolder - Mais negrito que o texto Bold;
        Peso com variações numéricas:
            vai de 100 em 100 até 900:
                100 - Extra Light;
                200 - Light;
                300 - Book;
                400 - Regular;
                500 - Medium;
                600 - SemiBold;
                700 - Bold;
                800 - Extra Bold;
                900 - Black;
            nem sempre todos os pesos estão disponíveis em todas as fontes.
    


    Estilos:
        Pode se misturar com o Peso e é para colcar por exemplo em Italico usando o comando "font-style: ;"
    


    Sublinhado:
        O sublinhado serve para destacar um texto como se fosse hyperlink mas sem ser um link. Usamos o comando "text-decoration: underline;"
            O sublinhado é feito pelo comando "text-decoration: underline;"


    Shorthand:
        É para colocar todas as propriedades da fonte em uma linha, separadas por ponto e vírgula ";", como abaixo:
            - font-style -> font-weight -> font-size -> font-family
        É usado para simplificar os comandos.
        se usa os seguintes exemplos: 
            font-family: "Work Sans", sans-serif;
            fornt- weight: bold;
            font- size: 3em;
            font-style: italic;
            
             ao invez  de digitar tudo acima, basta usar apenas:

            font: italic bold 3em "Work Sans", sans-serif;
    


    Google fonts:
        Entrando nesse site podemos encontrar várias fontes grátis que são carregadas diretamente do servidor da google. E São uma opção muito boa para quem não tem a fonte baixada no computador do cliente ou que quer ter mais de uma fonte num projeto.
        Você vai utilizar esse tipo de fontes externas colcoando uma regra de import "@" no css e a referência da fonte.
        Clicar nela e selecionar o estilo que deseja. Para cada fonte você tera que colocar um "@import"
    


    Externas ou baixadas:
        Se baixa em sites externos como o google fonts, dafont.com, etc. Quando baixadas podem vir com difentes formatos e cada navegador pode ser compativel com o formato ou não os tipos de formatos são:
            - opentype (otf)
            - truetype (ttf)
            - embedded-opentype
            - truetype-aat(Apple Advanced Typography)
            - svg
        Elas também são colocadas por meio de regras do css "@" é a "@font-face{}" dentro dessa regra se coloca "src: url('') format('')" podendo ter mais urls que funcionam da seguinte maneira:
            @font-face{
                font-family: 'Aqui você declara o nome que a fonte vai ter';
                src: url('Aqui se coloca onde está o arquivo da fonte') format('Aqui se coloca o formato do arquivo ex. opentype')
            }

        Exemplo:
            @font-face {
            font-family: Love;
            src: url(fontes/love\ larry\ ttf.ttf) format(truetype);
            font-weight: normal;
            font-style: normal;
            }
    


    Alinhando textos:
        Você pode alinhar o texto com relação à linha ou ao elemento pai. usando a propriedade "text-align". Exemplos: 
            Text-align: left | right | center | justify;

        Também tem como deixar o texto com identação usando a propriedade "text-ident". Exemplos:
            text-indent: 30px;
            text-indent: 2em;

        E mudar o espacamento entre as linhas usando a propriedade "line-height". Exemplo:
                line-height: 1.6;
    



    Transformando as letras:
        Você pode converter para maiúsculas ou minúsculas.
                
            Maiúsculas:
                text-transform: uppercase;

                Para deixar as letras maiúsculas e com as letras que já estavam maiúsculas maiores que as outras:
                    font-variant: samal-caps;
                
            Minúsculas:
                text-transform: lowercase;


    
    Resposividade:
        utilizamos a tag normal que é a "font-size" mas em vez de colocarmos "1em" por exemplo podemos colocar basiado na largura da tela Exemplo:
            font-size: 10vw;
            vw  = viewport width (largura do dispositivo)
            
            O valor de 1vw é igual ao da largura da janela do navegador, por isso se o tamanho da janela for alterado,



Seletores Personalizados:
    ID:
        Para declarar um id em HTML, basta usar o atributo "id=" no elemento que você quer dar o id. e para chamar esse id em css basta colocar "#" e o nome do identificador escolhido. Exemplo:
            HTML
                <h1 id="principal">Exemplo</h1>
            CSS:
                h1{
                    color: rgb(0, 71, 0);
                }

                h1#principal{
                    text-align: center;
                }
            Então a cores dos meus h1 vão ser rgb(0, 71, 0) e estaram descentralisadas, mas meus h1 com a class "#principal" ficará centralizado na página e em verde.
            A limietação id é que só pode haver um no html todo 
    
    Class:
        Para usar uma class em HTML basta adicionar um atributo "class" na tag correspondente. E para chamar essa class em css basta colocar "." e o nome da classe escolhida.
        É basicamente a mesma coisa o id mas podem ter vários na página.
        também tem como colocar a tag "class" dentro de uma "p" usando a tag "span", assim podendo usar a mesma cor para múltiplas palavras.
        pode se colocar outras classes dentro a tag "class" usando um espaço para separar elas.
    
    Pseudo-classes:
        Funciona quase exatamnete como os outros acima mas a forma que ele funciona é se o elemento é  ou não em uma condição específica.
        São estados de um elemento HTML e são chamadas por meio do nome da classe seguido dos dois pontos (:).
            :link - Link sem ser clicado.
            :visited - Link que foi visitado.
            :hover - Poderia ser clicado mas não está sendo.
            :active - O botão esta sendo clicado.
            :focus – Elemento que possui o foco do mouse (input).
    
    Pseudo-elementos:
        São uma propriedade de CSS que permite adicionar estilos a elementos que não existem no HTML.
            ::before – Adiciona conteúdo antes da tag.
            ::after – Adiciona conteúdo depois da tag.
            ...
        Exemplo:
            a::after{
                content: "[link]";
                text-decoration: none;
                font-weight: normal;
                color: darkgray;
            }
            Basicamente depois de todos os links vai aparecer [link] e isso não está no html e sim no css.
        




Modelos de caixas:
    São muito usadas no HTML e no CSS pois assim fica mais fácil organizar as informações. Pode se ter várias caixas dentro de outras caixas.
        para modificar a altura de caixas utilizamos a propriedade "height" e a largura utilizamos a propriedade "width";
            height = altura
            width = largura

    Um "h1" pode ser considerando uma caixa assim como um "p" ou qualquer outra coisa em html.

    Para colocar uma borda em uma caixa se utiliza a propriedade "border" e para colocar mais espaço interno da informação utilizamos "padding" e o externo "margin". Para fazer um tracejado sobre a borda no caso fora do elemento se utiliza a propriedade "outline";
        border  – Define as linhas que rodeiam a caixa.
            border-width =   define a espessura das linhas.
            border-style =  define o estilo das linhas:
                solid =  Linha sólida.
                dashed = Linha tracejada.
                dotted = Linha pontilhada.
            border-color = Cor das linhas.
              ou
            border: (espessura) (estilo) (cor);

        padding – Espaçamento entre a borda e o conteúdo.
            padding-top(topo), right(direita), bottom(baixo), left(esquerda) = Especificam a quantidade de espaço para cada lado individualmente.
              se colocar somente 1 número de parametro ele aplica para todas as margens.
            padding: 10px;
              Se colocar  dois números ele aplica na vertical e horizontalmente.
            padding: 10px 5px;

        margin  – Espaçamento entre a margem e a próxima caixa;
            margin-top,  right, bottom, left = Especificam a posição da margem naquela direção. 
            margin: auto; =  Centraliza horizontalmente.
            para colcoar a "margin" centralizada e botar mais marge em cima e abaixo usando o shorthand:
                margin: 10px autp 10px auto;
                10px é a margem superior e inferior e auto é a margem esquerda e direita.

        outline – Linha que rodeia o border da caixa.

            outline-color = Cor da linha.
            outline-width = Espessura da linha.
            outline-style = Estilo da linha (solid, dashed etc).
    
    Tipos de caixa:
        Box-level:
            É o tipo que vai pular uma linha e começar na coluna seguinte, é sempre inline. É uma caixa isolada quando é declarada ele vai pular uma linha e ir até o final da tela e depois que termina o box ele pula para linha de baixo; Exemplo:
                div - é usando quando quero quebrar a linha e fazer um box que ocupa a largura inteira
            
        Inline-level:
            Nunca pula linha e tenta ficar dentro da linha anterior. Ele não pula linha ocupa o espaço que precisa e depois dá continuidade ao conteudo na mesma linha;
                span - É usada quando quer colcar uma caixa em uma linha e continuar o conteúdo
    
        Display:
            block – O elemento fica no bloco acima e abaixo. Exemplo: h1, p, div.
            inline – O elemento fica ao lado do proximo. Exemplo: span, a, strong.
            none – Não exibe nada.
            inline-block – Permite que os elementos estejam dentro deles mas não são como os bloco.

    Grouping Tags:
        Antigamente só se usava "div" para a separção de determinadas partes dos sites mas hoje em dia o desejável a se usar é "header"(cabeçalho), o "main"(a parte principal do site) e o "footer"(rodapé). Todos citados são considerdos "divs" mas para a organização do site é melhor que se use eles. 
            header  = cabeçalho -  Usado para definir o cabeçalho do site.
            nav     = barra de navegação - Usado para criar a barra de navegação do site.
            main    = principal – Define a área principal do documento.
            section = Divide o documento em seções.
            aside   = Lado – Usado para inserir informações relacionadas à parte principal do documento.
            footer  = rodapé – Usado para inserir informações referentes ao rodapé do site.
        Continua usando div não cria dor de cabeça para si
    
    Sombra nas Caixas:
        Serve para dar um efeito de sombra na imagem ou texto.
        box-shadow: (horizontal) (vertical) (blur(embaçamento)) (spread(espalhamento)) (color);
    
    Caixas com vértices arredondados:
        Serve para dar um arredondamento nos cantos das caixas.
        border-radius: tl tr bl br (top left / top right / bottom left / bottom right );
          ou
        border-radius: 5px; /* Todos os lados */
          ou
        border-radius: 5px 3px; meche apenas os cantos direitos e esquerdos. (5px está mechendo no canto superior esquerdo e canto inferior direito) (3px está mechendo  no canto superior direito e no inferior esquerdo)
     
     Borda personalizada:
        básicamante é uma forma de personalizar a borda de seu site ao seu bel prazer.
            border-image-source: url("caminho_da_imagem");
            border-image-slice: 20%; /* Valor percentual */
            border-iamge-repeat: repeat;
    
    Centralização vertical de caixas:
        Alinha o conteudo da caixa centralizado verticalmente se utiliza a propriedade.
            position:  absolute;
            top: 50%;
            left: 50%
            transform: translate(-50% -50%);

            position - a caixa de fora o caso a que ela está posicionada será relativo a essa posição. Por exemplo: Se você usar position: relative; A caixa ficará relativa a esse espaço.
            top - coloca o topo na linha onde eu quiser "do topo para baixo".
            left - coloca o começo na linha onde eu quiser "da esquerda para direita".
            transform - serve para mover as coisnas para fora dos limites normais. 
                    translate(-50%, -50%) move todos os valores para fora, mas ele precisa saber quantos pixels foram movidos no eixo x e y. E esse ta servindo para centralizar o ponto de apoio no centro da caixa em vez do canto superior direito.
                       
         

    



Variaveis em CSS:
    funciona colocando variaveis especificas antes da propriedade que você deseja utilizar.
    Por Exemplo:
        :root{
            --cor0: #c5ebd6;
            --cor1: #83e1ad;
            --cor2: #3ddc84;
            --cor3: #2fa866;
            --cor4: #1a5c37;
            --cor5: #063d1e;
        }
        Isso define se eu chamar a cor0 vai retornar  #c5ebd6, assim por diante.
        
    Então no css eu posso usar isso dessa maneira:
        .caixa {
            background-color: var(--cor1);
        }

    Tem que usar o "root" e as "--" para definir as variáveis globais, pois elas podem ser chamadas em qualquer lugar do documento.



Responsividade:
    O objetivo da responsividade é tornar o design do site adaptável e flexível para diferentes dispositivos e resoluções de tela.
    A responsividade é o processo pelo qual um website se adapta às diferentes dimensões do dispositivo em que está sendo visualizado.



Transições:
    Serve para colcar a duração da duração  das mudanças nas animações e transições do site.
    Formato: 
            transition: <propriedade> <tempo>;
                Propriedades: all (todas as propriedades), opacity, color, transform, filter, visibility, background-position, width, height, margin, padding etc..
              ou pode colcar só o tempo;
            transition-duration: 0.5s;



Listas:
    List-style-type: 'código da imagem/emoji' -> mmuda o sinal da frente da lista
    
    coluns: ; -> é para colocar a quatidade de colunas que a lista vai ter.

    list-style-position : inside | outside; -> serve para saber onde ficará o sinal da lista (dentro ou fora)
        -inside: o sinal fica dentro da caixinha da lista;
        -outside: o sinal fica fora da caixinha da lista



Vídeo ou imagem Responsivo:
    Serve para colocar um vídeo na página web e deixá-lo responsivo.
      div.video{
            position: relative;
        }
            - A propriedade position: relative; é usada para especificar que o posicionamento dos elementos filhos dentro deste contêiner será relativo ao próprio elemento "div.video".

        div.video > iframe{
            position: absolute;
            top: 5%;
            left: 5%;
            width: 90%;
            height: 90%;
        }
            - position: absolute;: Isso faz com que o elemento <iframe> seja posicionado absolutamente em relação ao seu contêiner pai com position: relative; (definido anteriormente).

            - top: 5%;: O elemento <iframe> será posicionado 5% para baixo a partir do topo do seu contêiner pai.

            - left: 5%;: O elemento <iframe> será posicionado 5% para a direita a partir da borda esquerda do seu contêiner pai.

            - width: 90%;: O elemento <iframe> ocupará 90% da largura do seu contêiner pai.

            - height: 90%;: O elemento <iframe> ocupará 90% da altura do seu contêiner pai.
    


Colocando uma imagem de fundo no seu site:
    Pode se colcoar muitos tipos de imagens as chapadas, degrade, por url, etc.

    Chapada:
        É colocar uma cor só  pra dar um background.
        
        Exemplo:
            .caixa {
                background: #white;
            }


    Degrade:
        É  quando você coloca várias cores e agradas e ela vai mostrando uma a uma conforme a visibilidade.

        Exemplo:
             .caixa {
                 background: linear-gradient(to bottom, red, yellow, green);
             }
             


    Por URL:
        Você pode usar qualquer tipo de imagem que esteja em algum lugar na internet ou em seu computador. Basta informar o caminho completo para a imag

        Exemplo:
            .caixa {
                background-image: url("caminho_da_sua_imagem");
            }
            Colocamos diretamente aqui o caminho da nossa imagem para que fique como background.
            Pode colocar imagens externas mas te torna um refém caso a imagem for removida ou muda de lugar.
    
        Todos citados podem ser usados no body, div, etc.
    


    Pode mudar tambem o quanto elas repetem  com:
        background-repeat: repeat | repeat-x | repeat-y | no-repeat;
            - Repeat : Repete tanto horizontal quanto verticalmente.
            - Repeat-X : Repete apenas na horizontal.
            - Repeat-Y : Repete apenas na Vertical.
            - No-Repeat : Não repete nenhuma vez.
    


    Pode mudar a posição da imagem  com:
        background-position: [left | right | center] || [top | bottom | center];
            - Left / Right / Center : Posiciona a imagem do lado esquerdo/direito/centro.
            - Top / Bottom / Center : Posiciona a imagem na parte superior/inferior/central.

        background-position: coluna linha;  - como funciona



    Pode mudar o tamanho delas com:
        background-size: auto | length | cover | contain ;
            - auto : Deixar a imagem na sua proporção original.
            - Length : Define a largura e altura em pixels.
            - Cover : A imagem preenche todo o container sem cortes.
            - Contain : A imagem preenche todo o container mantendo a proporção
    


    Pode se vincular com o conteudo do site básicamnete um vículo: 
        background-attachment: scroll | fixed | local;
            - Scroll : O padrão é o scroll normal.
            - Fixed : Fica fixa na tela, não scrolla junto com o site.
            - Local : É como fixed mas a imagem segue as mudanças de scrolling



    Shorthand:
        Ordem:
            color > image > position > repeat > [size] > attachment
            [size] - não funciona mas está na documetação que pode ser feito assim.

        Pode se usar  assim:
            background: color image position repeat attachment;
            
            background: Black url() center center no-repeat fixed;



    Imagens com efeito Parallax simples:
        1) Criar uma div para a imagem e outra para o texto.
        2) Colocar a imagem como background da div de imagens.
            E o texto dentro da div de textos.
        3) Usar a propriedade "background-attachment" e definir ela como fixed.
            Assim a imagem ficará fixa na tela e não irá parar de movimentar enquanto o usuário rolar a pagina.